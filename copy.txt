                if check_x != prev_x and check_y == prev_y:
                    self.side = 0
                    loop = True
                    if check_x < prev_x:
                        x_n = prev_x * TILE_SIZE
                    else:
                        x_n = check_x * TILE_SIZE
                    y_n = (gradient * x_n) + intercept
                    current_x = x_n
                    current_y = y_n
                elif check_y != prev_y and check_x == prev_x:
                    self.side = 1
                    loop = True
                    if check_y < prev_y:
                        y_n = prev_y * TILE_SIZE
                    else:
                        y_n = check_y * TILE_SIZE
                    x_n = (y_n - intercept) / gradient
                    current_x = x_n
                    current_y = y_n
                elif check_y != prev_y and check_x != prev_x:
                    print("um buddy you went diagonal")

                if WORLD_LIST[check_x][check_y]:
                    find_wall = False
                else:
                    prev_x = check_x
                    prev_y = check_y

                if check_x != prev_x and check_y == prev_y:
                    self.side = 0
                    if check_x < prev_x:
                        x_n = prev_x * TILE_SIZE
                    else:
                        x_n = check_x * TILE_SIZE
                    y_n = (gradient * x_n) + intercept
                    current_x = x_n
                    current_y = y_n
                elif check_y != prev_y and check_x == prev_x:
                    self.side = 1
                    if check_y < prev_y:
                        y_n = prev_y * TILE_SIZE
                    else:
                        y_n = check_y * TILE_SIZE
                    x_n = (y_n - intercept) / gradient
                    current_x = x_n
                    current_y = y_n

            print(gradient)
            print(x_n, y_n)
            print(current_x, current_y)
            diff_x = self.x - current_x
            diff_y = self.y - current_y
            distance = math.sqrt(diff_x**2 + diff_y**2)



                            if check_x != prev_x and check_y == prev_y:
                    self.side = 0
                    if prev_x < check_x:
                        t1_x = (check_x + 1) * TILE_SIZE
                        t1_y = (gradient * t1_x) + intercept
                        if gradient > 0:
                            t2_y = (check_y + 1) * TILE_SIZE
                            t2_x = (t2_y - intercept)/gradient
                            test_x = math.floor(t2_x / TILE_SIZE)
                        else:
                            t2_y = check_y * TILE_SIZE
                            t2_x = (t2_y - intercept) / gradient
                            test_x = math.floor(t2_x / TILE_SIZE)
                        if test_x == check_x:
                            x_n = t2_x
                            y_n = t2_y
                        else:
                            x_n = t1_x
                            y_n = t1_y
                    else:
                        t1_x = check_x * TILE_SIZE
                        t1_y = (gradient * t1_x) + intercept
                        if gradient > 0:
                            t2_y = check_y * TILE_SIZE
                            t2_x = (t2_y - intercept) / gradient
                            test_x = math.floor(t2_x / TILE_SIZE)
                        else:
                            t2_y = (check_y + 1) * TILE_SIZE
                            t2_x = (t2_y - intercept) / gradient
                            test_x = math.floor(t2_x / TILE_SIZE)
                        if test_x == check_x:
                            x_n = t2_x
                            y_n = t2_y
                        else:
                            x_n = t1_x
                            y_n = t1_y
                    current_x = x_n
                    current_y = y_n
                elif check_y != prev_y and check_x == prev_x:
                    self.side = 1
                    if prev_y < check_y:
                        t1_y = (check_y + 1) * TILE_SIZE
                        t1_x = (t1_y - intercept)/gradient

                        if gradient > 0:
                            t2_x = (check_x + 1) * TILE_SIZE
                            t2_y = gradient * t2_x + intercept
                            test_y = math.floor(t2_y / TILE_SIZE)
                        else:
                            t2_x = check_x * TILE_SIZE
                            t2_y = gradient * t2_x + intercept
                            test_y = math.floor(t2_y / TILE_SIZE)
                        if test_y == check_y:
                            x_n = t2_x
                            y_n = t2_y
                        else:
                            x_n = t1_x
                            y_n = t1_y
                    else:
                        t1_y = check_y * TILE_SIZE
                        t1_x = (t1_y - intercept) / gradient

                        if gradient > 0:
                            t2_x = check_x * TILE_SIZE
                            t2_y = gradient * t2_x + intercept
                            test_y = math.floor(t2_y / TILE_SIZE)
                        else:
                            t2_x = (check_x + 1) * TILE_SIZE
                            t2_y = gradient * t2_x + intercept
                            test_y = math.floor(t2_y / TILE_SIZE)
                        if test_y == check_y:
                            x_n = t2_x
                            y_n = t2_y
                        else:
                            x_n = t1_x
                            y_n = t1_y
                    current_x = x_n
                    current_y = y_n
                elif check_y != prev_y and check_x != prev_x:
                    print("um buddy you went diagonal")